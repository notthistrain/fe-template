stages:
  - lint
  - build
  - dev

variables:
  PNPM_CACHE_DIR: .pnpm-store
  RPM_TOP_DIR: /tmp/rpmbuild/$CI_PROJECT_NAME
  ARTIFACT_DIR: /var/www/repos/custom-rpms/
  BUILD_RELEASE: "0"

.before_script_template: &before_script_steps
  before_script:
    - export BUILD_TIME=$(date +"%Y%m%d%H%M")
    - export BUILD_VERSION=$(grep '"version":' package.json | awk -F':' '{print $2}' | tr -d ' ",')

cache:
  key: $CI_PROJECT_ID-pnpm-cache
  paths:
    - node_modules
    - $PNPM_CACHE_DIR

.lint_template: &lint_definition
  stage: lint
  script:
    - echo "Lint code"
    - make docker \
        PNPM_CACHE_DIR=$PNPM_CACHE_DIR \
        CI_PROJECT_NAME=$CI_PROJECT_NAME \
        TARGET_IMAGE=linter
  allow_failure: false

.build_template: &build_definition
  script:
    - make rpm \
        BUILD_VERSION=$BUILD_VERSION \
        BUILD_TIME=$BUILD_TIME \
        PNPM_CACHE_DIR=$PNPM_CACHE_DIR \
        CI_PROJECT_NAME=$CI_PROJECT_NAME \
        TARGET_IMAGE=nginx \
        TARGET_TAG=${TARGET_TAG} \
        RPM_TOP_DIR=$RPM_TOP_DIR \
        ARTIFACT_DIR=$ARTIFACT_DIR

lint:
  <<: *before_script_steps
  <<: *lint_definition
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: always
    - when: never

build:
  <<: *before_script_steps
  <<: *build_definition
  stage: build
  variables:
    TARGET_TAG: latest
  only:
    - master

dev:
  <<: *before_script_steps
  <<: *build_definition
  stage: dev
  variables:
    TARGET_TAG: dev
  only:
    - release