stages:
  - lint
  - build

variables:
  PNPM_CACHE_DIR: .pnpm-store
  NPM_REGISTRY: 'https://registry.npmmirror.com/'

before_script:
  - export BUILD_TIME=$(date +"%Y%m%d%H%M")
  - export BUILD_VERSION=$(grep '"version":' package.json | awk -F':' '{print $2}' | tr -d ' ",')

lint:
  stage: lint
  script:
    - |
      echo "Lint code"

    - |
      docker build \
        --build-arg BUILD_VERSION=$BUILD_VERSION \
        --build-arg BUILD_TIME=$BUILD_TIME \
        --build-arg PNPM_CACHE_DIR=$PNPM_CACHE_DIR \
        --build-arg NPM_REGISTRY=$NPM_REGISTRY \
        --cache-from $CI_PROJECT_NAME:latest \
        --target linter \
        -f ci/Dockerfile .

  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: always
    - when: never

  allow_failure: false

build:
  stage: build
  script:
    - |
      echo "Build version: $BUILD_VERSION"
      echo "Build time: $BUILD_TIME"

    - |
      docker build \
        --build-arg BUILD_VERSION=$BUILD_VERSION \
        --build-arg BUILD_TIME=$BUILD_TIME \
        --build-arg PNPM_CACHE_DIR=$PNPM_CACHE_DIR \
        --build-arg NPM_REGISTRY=$NPM_REGISTRY \
        --cache-from $CI_PROJECT_NAME:latest \
        --target nginx \
        -t $CI_PROJECT_NAME:$BUILD_VERSION \
        -t $CI_PROJECT_NAME:latest \
        -f ci/Dockerfile .
    - docker save -o $CI_PROJECT_NAME-$BUILD_VERSION.tar $CI_PROJECT_NAME:$BUILD_VERSION
  only:
    - master
  artifacts:
    paths:
      - $CI_PROJECT_NAME-*.tar
    expire_in: 1 month
    name: frontend-docker-image