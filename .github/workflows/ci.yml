name: CI/CD Pipeline

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

env:
  BUILD_DIR: dist
  IMAGE_DIR: image
  ARTIFACT_NAME: frontend-release

jobs:
  linter:
    name: Run Linter
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build to linter stage
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .ci/Dockerfile
          target: linter
          build-args: |
            NPM_REGISTRY=https://registry.npmjs.org/
            PNPM_CACHE_DIR=/pnpm-store
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-release:
    name: Build Release Artifacts
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build to nginx stage
        uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          file: .ci/Dockerfile
          target: nginx
          build-args: |
            NPM_REGISTRY=https://registry.npmjs.org/
            PNPM_CACHE_DIR=.pnpm-store
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=local,dest=${{IMAGE_DIR}}

      - name: Create version info
        run: |
          echo "$(grep '"version":' package.json | awk -F':' '{print $2}' | tr -d ' ",')-$(date -u +'%Y-%m-%dT%H:%M:%SZ')" > ${{ env.BUILD_DIR }}/version.txt

      - name: Archive release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{IMAGE_DIR}}
          retention-days: 7

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: ${{IMAGE_DIR}}/*
          tag_name: ${{ github.ref }}
          name: Release ${{ github.ref_name }}
